@{
    Layout = "~/Views/Shared/_LayoutCustom.cshtml";
}

@model DancingGoat.Models.DevZone.DevZoneModel.eFormModel.Dropdownlist

<section class="block-eForm py-5">
    <div class="container">
        <h1 class="text-center">From For DEV!!!</h1>
        <p class="text-center">
            เลือกเรื่องที่ต้องการสอบถาม แนะนำ หรือติชม และกรอกข้อมูลให้ครบ <br />
            เราจะรีบติดต่อกลับโดยเร็ว หรือส่งอีเมลมาหาเราได้ที่ ContactUs@heygoody.com
        </p>
        <div class="row">
            <div class="col-xl-4 col-lg-6 col-md-10 mx-auto">
                <form class="e-form rounded shadow p-4">
                    <div class="mb-3">

@*                        @Html.DropDownListFor(model => model.subjectList,new SelectList(Model.subjectList,"Text","Text") ,new{@class = "form-select"})
*@
                        <select id="subject" class="form-select">
                                <option value="0" selected>คำนำหน้า</option>
                                <option value="1">One</option>
                                <option value="2">Two</option>
                                <option value="3">Three</option>
                            </select>

                    </div>
                    <div class="row g-0">
                        <div class="col-4 mb-3">
@*                            @Html.DropDownListFor(model => model.titleList,new SelectList(Model.titleList,"Text","Text") ,new{@class = "form-select"})
*@

                            <select id="titlename" class="form-select">
                                <option value="0" selected>คำนำหน้า</option>
                                <option value="1">One</option>
                                <option value="2">Two</option>
                                <option value="3">Three</option>
                            </select>
                        </div>
                        <div class="col-8 mb-3">
                            <input id="name" type="text" class="form-control" placeholder="ชื่อ" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <input id="surname" type="text" class="form-control" placeholder="นามสกุล" />
                    </div>
                    <div class="mb-3">
                        <input id="email" type="email" class="form-control" placeholder="อีเมล" />
                    </div>
                    <div class="mb-3">
                        <input id="phone" type="text" class="form-control" placeholder="เบอร์มือถือ" />
                    </div>
                    <div class="mb-3">
                        <textarea class="form-control overflow-hidden" placeholder="อยากบอกเราว่า..." rows="2"
                                  id="textArea" style="padding: 12px 16px 24px;"></textarea>
                    </div>
                    <div class="mb-3">
                        <p class="mb-0">รูปภาพประกอบ (ถ้ามี)</p>
                        <p>แนบรูปภาพได้ไม่เกิน 5 รูป</p>
                        <button type="button" class="btn btn-primary" id="btnFistUpFiles" onclick="triggerClick();">
                            Fist Up
                            Files
                        </button>
                        <div>
                            <input class="form-control" type="file" id="upFiles" name="upFiles[]" multiple
                                   onchange="upFilesImg(this,'listsImg');" accept=".png,.jpg,.gif"
                                   onclick="this.value=null;" hidden>
                            <div id="listsImg"></div>
                        </div>
                        <button type="button" class="btn btn-info" id="btnLastUpFiles" style="display:none;"
                                onclick="triggerClick();">
                            Last Up Files
                        </button>
                    </div>
                    <input type="button" value="submit" onclick="saveForm()" class="btn btn-primary" />
                </form>
            </div>
        </div>
    </div>
</section>

<script>
    var arrayFile = [];

    function triggerClick() {
        document.getElementById("upFiles").click();
    }

    function upFilesImg(input) {

        for (var i = 0; i < input.files.length; i++) {

            if (i == 5) {

                console.log("5")
                break;
            }

            let fileName = input.files[i].name;
            let filenameSP = fileName.split('.')
            fileName = filenameSP[0] + "_" + makeid(5)
            let fileSize = input.files[i].size

            let compressSize = 1;
            let compressType = "image/jpeg";

            if (fileSize >= 1 * 1000 * 1000) {
                compressSize = 0.55
            }
            ImageProcess(input.files[i], compressSize, compressType, fileName);
        }

    }

    function ImageProcess(img, compressSize, compressType, fileName) {
        return new Promise(resolve => {
            let blobURL = URL.createObjectURL(img);
            let image = new Image();
            image.src = blobURL;

            image.onload = () => {
                URL.revokeObjectURL(this.src);
                let canvas = document.createElement("canvas");
                canvas.width = 600;
                canvas.height = 350;
                let ctx = canvas.getContext("2d");
                ctx.drawImage(image, 0, 0, 600, 350);

                canvas.toBlob(
                    blob => {
                        var compressedFile = new File([blob], fileName, {
                            type: 'image/jpeg',
                            lastModified: Date.now()
                        });
                    },
                    compressType,
                    compressSize);

                let imageObject = {};
                imageObject.Name = fileName;
                imageObject.base64 = canvas.toDataURL("image/jpeg");

                if (arrayFile.length < 5) {
                    arrayFile.push(imageObject);
                }
                document.getElementById("listsImg").innerHTML = "";
                arrayFile.forEach(element => {
                    showImage(element.base64, element.Name)
                });
                showUploadButton();
                resolve('resolved');
            }

        });
    }

    function showImage(src, name) {
        document.getElementById("listsImg").innerHTML += `
                                    <div id="item" class="listsImg-items">
                                        <img width='300' height='300' src='${src}' />
                                        <br/>
                                        ${name}
                                        <br/>
                                        <button onclick="removeImage(this,'${name}')" type='button'>ลบ</button>
                                    </div>
                                    `
    }

    function removeImage(element, name) {
        element.parentNode.remove();
        let filtered = arrayFile.filter(function (el) { return el.Name != name; })
        arrayFile = filtered;
        showUploadButton();
    }

    function showUploadButton() {
        if (arrayFile.length < 5 && arrayFile.length != 0) {
            document.getElementById("btnFistUpFiles").style.display = "none";
            document.getElementById("btnLastUpFiles").style.display = "block"

        } else if (arrayFile.length == 5) {
            document.getElementById("btnFistUpFiles").style.display = "none";
            document.getElementById("btnLastUpFiles").style.display = "none";
        } else {
            document.getElementById("btnFistUpFiles").style.display = "block";
            document.getElementById("btnLastUpFiles").style.display = "none";
        }
    }

    function makeid(length) {
        let result = '';
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        const charactersLength = characters.length;
        let counter = 0;
        while (counter < length) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
            counter += 1;
        }
        return result;
    }

</script>

<script>

    function saveForm() {
        $.ajax({
            type: "POST",
            async: false,
            contentType: "application/json; charset=utf-8",
            url: "/devzone/savadata",
            beforeSend: function (xhr) {
                xhr.setRequestHeader('X-CSRF-Token', csrfToken)
            },
            data: JSON.stringify({
                'Subject': $("#subject").val(),
                'TitleName': $("#titlename").val(),
                'Name': $("#name").val(),
                'SurName': $("#surname").val(),
                'Email': $("#email").val(),
                'Phone': $("#phone").val(),
                'Detail': $("#textArea").val(),
                'Image': arrayFile
            }),
            success: function (data) {
                console.log(data)
            }, error: function (error) {
                console.log(error)
            }
        });
    }

</script>

